openapi: 3.0.3
info:
  title: Audiophile E-Commerce Website API Documentation
  version: 1.0.0
  description: Challenge is to build out application progrgamming interface for multi-page
    e-commerce website
paths:
  /api/cart/:
    get:
      operationId: api_cart_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          description: ''
  /api/cart/{cartid}/delete/product/{id}:
    delete:
      operationId: api_cart_delete_product_destroy
      parameters:
      - in: path
        name: cartid
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/cart/{cartid}/product:
    get:
      operationId: api_cart_product_list
      parameters:
      - in: path
        name: cartid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartProduct'
          description: ''
    post:
      operationId: api_cart_product_create
      parameters:
      - in: path
        name: cartid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartProduct'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartProduct'
          description: ''
  /api/cart/{cartid}/update/{id}:
    put:
      operationId: api_cart_update_update
      parameters:
      - in: path
        name: cartid
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartProduct'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartProduct'
          description: ''
    patch:
      operationId: api_cart_update_partial_update
      parameters:
      - in: path
        name: cartid
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartProduct'
          description: ''
  /api/cart/{cartid}/delete:
    delete:
      operationId: api_cart_delete_destroy
      parameters:
      - in: path
        name: cartid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this cart.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/cart/cart-item:
    get:
      operationId: api_cart_cart_item_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartProduct'
          description: ''
  /api/cart/create:
    get:
      operationId: api_cart_create_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          description: ''
    post:
      operationId: api_cart_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/cart/delete-all/{id}:
    delete:
      operationId: api_cart_delete_all_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/product:
    get:
      operationId: api_product_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product_data'
          description: ''
  /api/product/{id}/remove:
    delete:
      operationId: api_product_remove_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/product/{id}/update:
    put:
      operationId: api_product_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_product_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/product/create:
    get:
      operationId: api_product_create_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_product_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/product/create/image:
    get:
      operationId: api_product_create_image_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
          description: ''
    post:
      operationId: api_product_create_image_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/product/image:
    get:
      operationId: api_product_image_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/product/image/{id}:
    put:
      operationId: api_product_image_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: api_product_image_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
components:
  schemas:
    Cart:
      type: object
      properties:
        cartid:
          type: string
          format: uuid
          readOnly: true
      required:
      - cartid
    CartProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_price:
          type: string
          readOnly: true
        quantity:
          type: integer
        created:
          type: string
          format: date
          readOnly: true
        modified:
          type: string
          format: date
          readOnly: true
        product:
          type: integer
        cart:
          type: string
          format: uuid
      required:
      - cart
      - created
      - id
      - modified
      - product
      - total_price
    PatchedCartProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_price:
          type: string
          readOnly: true
        quantity:
          type: integer
        created:
          type: string
          format: date
          readOnly: true
        modified:
          type: string
          format: date
          readOnly: true
        product:
          type: integer
        cart:
          type: string
          format: uuid
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        features:
          type: string
        description:
          type: string
        Release_date:
          type: string
          format: date
          readOnly: true
        Category:
          type: integer
        image:
          type: integer
    PatchedProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        main_image:
          type: string
          format: uri
        first_image:
          type: string
          format: uri
        second_image:
          type: string
          format: uri
        third_image:
          type: string
          format: uri
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        features:
          type: string
        description:
          type: string
        Release_date:
          type: string
          format: date
          readOnly: true
        Category:
          type: integer
        image:
          type: integer
      required:
      - Category
      - Release_date
      - id
      - image
      - name
      - slug
    ProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        main_image:
          type: string
          format: uri
        first_image:
          type: string
          format: uri
        second_image:
          type: string
          format: uri
        third_image:
          type: string
          format: uri
      required:
      - first_image
      - id
      - main_image
      - second_image
      - third_image
    product_data:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        features:
          type: string
        description:
          type: string
        Release_date:
          type: string
          format: date
          readOnly: true
        Category:
          type: integer
        image:
          type: integer
      required:
      - Category
      - Release_date
      - id
      - image
      - name
      - slug
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
